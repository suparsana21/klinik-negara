<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.MemoryMappedFiles</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle">
      <summary>提供一个表示用于顺序访问的内存映射文件的安全句柄。</summary>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.IsInvalid"></member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle">
      <summary>提供一个表示用于随机访问的非托管内存块的视图的安全句柄。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
      <summary>表示内存映射文件。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
      <summary>从现有文件创建一个具有指定的访问模式、名称、继承性和容量的内存映射文件。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="fileStream">现有文件的文件流。</param>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。指定 0 可为的大小设置的产能<paramref name="filestream" />。</param>
      <param name="access">指定内存映射文件允许的访问类型的枚举值之一。此参数不能设置为<see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</param>
      <param name="inheritability">指定内存映射文件的句柄能否由子进程继承的枚举值之一。默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <param name="leaveOpen">一个值，该值指示是否关闭源文件流式传输时<see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />被释放。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 为 null 或空字符串。- 或 -<paramref name="capacity" /> 和文件长度为零。- 或 -<paramref name="access" />设置为<see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />或<see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />枚举值，这不允许。- 或 -<paramref name="access" />设置为<see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />和<paramref name="capacity" />的长度大于filestream。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileStream" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 小于零。- 或 -<paramref name="capacity" /> 小于文件大小。- 或 -<paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。- 或 -<paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
      <summary>基于磁盘上的文件创建一个内存映射文件。</summary>
      <returns>内存映射文件。</returns>
      <param name="path">要映射的文件的路径。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。- 或 -<paramref name="path" /> 引用无效的设备。 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.IO.IOException">发生了 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> 超过了操作系统定义的最大长度。在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有该文件的所需权限。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
      <summary>基于磁盘上的文件创建一个具有指定访问模式的内存映射文件。</summary>
      <returns>具有指定访问模式的内存映射文件。</returns>
      <param name="path">要映射的文件的路径。</param>
      <param name="mode">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。- 或 -<paramref name="path" /> 引用无效的设备。- 或 -<paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 是 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。- 或 -<paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。- 或 -发生了 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> 超过了操作系统定义的最大长度。在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有该文件的所需权限。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
      <summary>基于磁盘上的文件创建一个具有指定访问模式和名称的内存映射文件。</summary>
      <returns>具有指定名称和访问模式的内存映射文件。</returns>
      <param name="path">要映射的文件的路径。</param>
      <param name="mode">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</param>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。- 或 -<paramref name="path" /> 引用无效的设备。- 或 -<paramref name="mapName" /> 是空字符串。- 或 -<paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 或 <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 是 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。- 或 -<paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。- 或 -发生了 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> 超过了操作系统定义的最大长度。在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有该文件的所需权限。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
      <summary>基于磁盘上的文件创建一个具有指定访问模式、名称和容量的内存映射文件。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="path">要映射的文件的路径。</param>
      <param name="mode">访问模式；除 <see cref="F:System.IO.FileMode.Append" /> 外，可以是任意 <see cref="T:System.IO.FileMode" /> 枚举值。</param>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。指定 0，以将容量设置为磁盘上文件的大小。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。- 或 -<paramref name="path" /> 引用无效的设备。- 或 -<paramref name="mapName" /> 是空字符串。- 或 -<paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 或 <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。- 或 -<paramref name="capacity" /> 小于零。- 或 -<paramref name="capacity" /> 小于文件大小（但不为零）。- 或 -<paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。</exception>
      <exception cref="T:System.IO.IOException">发生了 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> 超过了操作系统定义的最大长度。在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有该文件的所需权限。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary>基于磁盘上的文件创建一个具有指定访问模式、名称、容量和访问类型的内存映射文件。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="path">要映射的文件的路径。</param>
      <param name="mode">访问模式；除 <see cref="F:System.IO.FileMode.Append" /> 外，可以是任意 <see cref="T:System.IO.FileMode" /> 枚举值。</param>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。指定 0，以将容量设置为磁盘上文件的大小。</param>
      <param name="access">指定内存映射文件允许的访问类型的枚举值之一。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。- 或 -<paramref name="access" /> 不是一个允许的值。- 或 -<paramref name="path" /> 指定空的文件。- 或 -<paramref name="access" /> 指定为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，容量大于 <paramref name="path" /> 所指示文件的大小。- 或 -<paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 或 <paramref name="mapName" /> 为 null。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。- 或 -<paramref name="capacity" /> 小于零。- 或 -<paramref name="capacity" /> 小于文件大小（但不为零）。- 或 -<paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。- 或 -<paramref name="access" /> 不是定义的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 值。- 或 -<paramref name="path" /> 指示的文件大小大于 <paramref name="capacity" />。</exception>
      <exception cref="T:System.IO.IOException">- 或 -发生了 I/O 错误。</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> 超过了操作系统定义的最大长度。在 Windows 中，路径包含的字符必须少于 248 个，文件名包含的字符必须少于 260 个。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有该文件的所需权限。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
      <summary>在系统内存中创建一个具有指定容量的内存映射文件。</summary>
      <returns>具有指定名称和容量的内存映射文件。</returns>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 小于或等于零。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary>在系统内存中创建一个具有指定容量和访问类型的内存映射文件。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <param name="access">指定内存映射文件允许的访问类型的枚举值之一。默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。- 或 -<paramref name="access" /> 设置为只写，且写入值类型为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值。 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 小于或等于零。- 或 -<paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
      <summary>创建一个具有指定名称、容量、访问类型、内存分配选项和继承性的内存映射文件。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <param name="access">指定内存映射文件允许的访问类型的枚举值之一。默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <param name="options">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</param>
      <param name="inheritability">一个值，该值指定内存映射文件的句柄能否由子进程继承。默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。- 或 -<paramref name="access" /> 设置为只写，且写入值类型为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值。 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 小于或等于零。- 或 -<paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。- 或 -<paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
      <summary>在系统内存中创建或打开一个具有指定容量的内存映射文件。</summary>
      <returns>具有指定名称和大小的内存映射文件。</returns>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。- 或 -<paramref name="capacity" /> 小于或等于零。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary>在系统内存中创建或打开一个具有指定容量和访问类型的内存映射文件。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <param name="access">指定内存映射文件允许的访问类型的枚举值之一。默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。- 或 -<paramref name="access" /> 设置为只写，且写入值类型为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。- 或 -<paramref name="capacity" /> 小于或等于零。- 或 -<paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</exception>
      <exception cref="T:System.UnauthorizedAccessException">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
      <summary>创建一个新的空内存映射文件或打开一个现有的内存映射文件（如果存在具有相同名称的内存映射文件）。如果打开现有的文件，则将忽略容量、选项、内存参数。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="mapName">要分配给内存映射文件的名称。</param>
      <param name="capacity">要分配给内存映射文件的最大大小（以字节为单位）。</param>
      <param name="access">指定内存映射文件允许的访问类型的枚举值之一。默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <param name="options">值的按位组合，它指示要应用到文件的内存分配选项。</param>
      <param name="inheritability">一个值，该值指定内存映射文件的句柄能否由子进程继承。默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。- 或 -<paramref name="access" /> 设置为只写，且写入值类型为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> 大于逻辑地址空间的大小。- 或 -<paramref name="capacity" /> 小于或等于零。- 或 -<paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。- 或 -<paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</exception>
      <exception cref="T:System.UnauthorizedAccessException">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。 </exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor">
      <summary>创建映射到内存映射文件视图的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</summary>
      <returns>可随机访问的内存块。</returns>
      <exception cref="T:System.UnauthorizedAccessException">对内存映射文件的访问控制未获授权。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
      <summary>创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移和大小。</summary>
      <returns>可随机访问的内存块。</returns>
      <param name="offset">启动此视图的字节位置。</param>
      <param name="size">视图的大小。指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 或 <paramref name="size" /> 是负值。- 或 -<paramref name="size" /> 大于逻辑地址空间。</exception>
      <exception cref="T:System.UnauthorizedAccessException">对内存映射文件的访问控制未获授权。</exception>
      <exception cref="T:System.IO.IOException">发生了 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary>创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移、大小和访问限制。</summary>
      <returns>可随机访问的内存块。</returns>
      <param name="offset">启动此视图的字节位置。</param>
      <param name="size">视图的大小。指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</param>
      <param name="access">指定内存映射文件允许的访问类型的枚举值之一。默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 或 <paramref name="size" /> 是负值。- 或 -<paramref name="size" /> 大于逻辑地址空间。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="access" /> 对于内存映射文件无效。</exception>
      <exception cref="T:System.IO.IOException">发生了 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
      <summary>创建映射到内存映射文件视图的流。</summary>
      <returns>内存流。</returns>
      <exception cref="T:System.UnauthorizedAccessException">对内存映射文件的访问控制未获授权。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
      <summary>创建一个流，它映射到内存映射文件的视图并具有指定的偏移和大小。</summary>
      <returns>具有指定偏移和大小的内存流。</returns>
      <param name="offset">启动此视图的字节位置。</param>
      <param name="size">视图的大小。指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 或 <paramref name="size" /> 是负值。- 或 -<paramref name="size" /> 大于逻辑地址空间。</exception>
      <exception cref="T:System.UnauthorizedAccessException">对内存映射文件的访问控制未获授权。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="size" /> 大于总虚拟内存。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary>创建一个流，它映射到内存映射文件的视图，并具有指定的偏移、大小和访问类型。</summary>
      <returns>具有指定特征的内存流。</returns>
      <param name="offset">启动此视图的字节位置。</param>
      <param name="size">视图的大小。指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</param>
      <param name="access">指定内存映射文件允许的访问类型的枚举值之一。默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 或 <paramref name="size" /> 是负值。- 或 -<paramref name="size" /> 大于逻辑地址空间。- 或 -<paramref name="access " /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="access" /> 对于内存映射文件无效。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="size" /> 大于总虚拟内存。- 或 -<paramref name="access" /> 对于内存映射文件无效。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose">
      <summary>释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 占用的非托管资源，还可以另外再释放托管资源。 </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
      <summary>在系统内存中打开一个具有指定名称的现有内存映射文件。</summary>
      <returns>具有指定名称的内存映射文件。 </returns>
      <param name="mapName">要打开的内存映射文件的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.IO.FileNotFoundException">为 <paramref name="mapName" /> 指定的文件不存在。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
      <summary>在系统内存中打开一个具有指定名称和访问权限的现有内存映射文件。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="mapName">要打开的内存映射文件的名称。</param>
      <param name="desiredAccessRights">指定要应用于内存映射文件的访问权限的枚举值之一。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。</exception>
      <exception cref="T:System.IO.FileNotFoundException">为 <paramref name="mapName" /> 指定的文件不存在。</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
      <summary>在系统内存中打开一个具有指定名称、访问权限和继承性的现有内存映射文件。</summary>
      <returns>具有指定特征的内存映射文件。</returns>
      <param name="mapName">要打开的内存映射文件的名称。</param>
      <param name="desiredAccessRights">指定要应用于内存映射文件的访问权限的枚举值之一。</param>
      <param name="inheritability">指定内存映射文件的句柄能否由子进程继承的枚举值之一。默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="mapName" /> 是空字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mapName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。- 或 -<paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</exception>
      <exception cref="T:System.UnauthorizedAccessException">请求的访问对于内存映射文件无效。</exception>
      <exception cref="T:System.IO.FileNotFoundException">为 <paramref name="mapName" /> 指定的文件不存在。</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle">
      <summary>获取内存映射文件的文件句柄。</summary>
      <returns>内存映射文件的句柄。</returns>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess">
      <summary>指定内存映射文件或视图的访问功能和限制。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.CopyOnWrite">
      <summary>对文件的读访问和写访问，限制条件是其他进程不会看到任何写入操作。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read">
      <summary>对文件的只读访问。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadExecute">
      <summary>对可以存储和运行可执行代码的文件的读访问。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite">
      <summary>对文件的读访问和写访问。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWriteExecute">
      <summary>对可以存储和运行可执行代码的文件的读访问和写访问。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write">
      <summary>对文件的只写访问。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileOptions">
      <summary>为内存映射文件提供内存分配选项。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages">
      <summary>在使用 <see cref="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" /> 或 <see cref="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" /> 方法创建视图之前，将延迟内存分配。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.None">
      <summary>未应用内存分配选项。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights">
      <summary>指定不与磁盘上的文件关联的内存映射文件的访问权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.AccessSystemSecurity">
      <summary>获取或设置文件权限的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ChangePermissions">
      <summary>更改与文件关联的安全和审核规则的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.CopyOnWrite">
      <summary>读取和写入文件的权限，限制条件是其他进程不会看到写入操作。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Delete">
      <summary>删除文件的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute">
      <summary>运行应用程序文件的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.FullControl">
      <summary>对文件进行完全控制以及修改访问控制和审核规则的权限。此值表示对文件进行任何操作的权限，并且是此枚举中的所有权限的组合。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read">
      <summary>以只读方式打开和复制文件的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadExecute">
      <summary>以只读方式打开和复制文件夹或文件以及运行应用程序文件的权限。此权限包括 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read" /> 权限和 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute" /> 权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadPermissions">
      <summary>从文件打开和复制访问及审核规则的权限。这不包括读取数据、文件系统特性或扩展文件系统特性的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWrite">
      <summary>打开和复制文件的权限，以及向文件添加数据或从文件中删除数据的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWriteExecute">
      <summary>打开和复制文件的权限，向文件添加数据或从文件中删除数据的权限，以及运行应用程序文件的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.TakeOwnership">
      <summary>更改文件所有者的权限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Write">
      <summary>向文件添加数据或从文件中删除数据的权限。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor">
      <summary>表示随机访问的内存映射文件视图。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
      <summary>清除此视图的所有缓冲区，使得所有缓冲的数据都被写入到基础文件。</summary>
      <exception cref="T:System.ObjectDisposedException">在访问器关闭后调用方法。</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset">
      <summary>[支持 .NET Framework 中 4.5.1 和最新版本"获取此视图的开始位置相对于内存映射文件的开头进行偏移的字节数。</summary>
      <returns>此视图的开始位置和内存映射文件的开始位置之间的字节数。</returns>
      <exception cref="T:System.InvalidOperationException">从中创建此实例的对象为 null。</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle">
      <summary>获取内存映射文件的视图的句柄。</summary>
      <returns>文件视图的操作系统句柄的包装器。</returns>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedViewStream">
      <summary>将内存映射文件的视图表示为按顺序访问的流。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush">
      <summary>清除此流的所有缓冲区，使得所有缓冲的数据都被写入到基础文件。</summary>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset">
      <summary>[支持 .NET Framework 中 4.5.1 和最新版本"获取此视图的开始位置相对于内存映射文件的开头进行偏移的字节数。</summary>
      <returns>此视图的开始位置和内存映射文件的开始位置之间的字节数。</returns>
      <exception cref="T:System.InvalidOperationException">从中创建此实例的对象为 null。</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle">
      <summary>获取内存映射文件的视图的句柄。</summary>
      <returns>文件视图的操作系统句柄的包装器。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)">
      <summary>设置当前流的长度。</summary>
      <param name="value">所需的当前流的长度（以字节表示）。</param>
      <exception cref="T:System.NotSupportedException">此方法不受支持。</exception>
    </member>
  </members>
</doc>